---

- name: Security Plugin Install | Download Opendistro Elasticsearch security plugin {{ opendistro_plugin_version }}
  get_url:
    url: "{{ opendistro_elasticsearch_download_url }}/opendistro-security/opendistro_security-{{ opendistro_plugin_version }}.zip"
    dest: "{{ es_home }}/opendistro_security-{{ opendistro_plugin_version }}.zip"
  register: download

- name: Security Plugin Install | Install the Opendistro security plugin
  command: "{{ es_plugin_bin_path }} install -b file://{{ es_home }}/opendistro_security-{{ opendistro_plugin_version }}.zip"
  when: download.changed
  register: install

## Here we are going to use self-signed certificates for Transport (Node-Node communication) & REST API layer
## Using searchguard offline TLS tool to create node & root certificates
- name: Security Plugin Install | Create local temporary directory for certificates generation
  local_action:
    module: file
    path: /tmp/opendistro-nodecerts
    state: directory
  run_once: true
  when: install.changed

- name: Security Plugin Install | Download certificates generation tool
  local_action:
    module: get_url
    url: https://search.maven.org/remotecontent?filepath=com/floragunn/search-guard-tlstool/1.5/search-guard-tlstool-1.5.zip
    dest: /tmp/opendistro-nodecerts/search-guard-tlstool.zip
  run_once: true
  when: install.changed

- name: Security Plugin Install | Extract the certificates generation tool
  local_action:
    module: unarchive
    src: /tmp/opendistro-nodecerts/search-guard-tlstool.zip
    dest: /tmp/opendistro-nodecerts
  run_once: true
  when: install.changed

- name: Security Plugin Install | Make the executable file
  local_action:
    module: file
    dest: /tmp/opendistro-nodecerts/tools/sgtlstool.sh
    mode: a+x
  run_once: true
  when: install.changed

- name: Security Plugin Install | Prepare the certificates generation template file
  local_action:
    module: template
    src: tlsconfig.yml
    dest: /tmp/opendistro-nodecerts/config/tlsconfig.yml
  run_once: true
  when: install.changed

- name: Security Plugin Install | Generate the node & admin certificates in local
  local_action:
    module: command /tmp/opendistro-nodecerts/tools/sgtlstool.sh -c /tmp/opendistro-nodecerts/config/tlsconfig.yml -ca -crt -t /tmp/opendistro-nodecerts/config/
  run_once: true
  when: install.changed

- name: Security Plugin Install | Copy the node & admin certificates to Elasticsearch cluster
  copy:
    src: "/tmp/opendistro-nodecerts/config/{{ item }}"
    dest: /etc/elasticsearch/
    mode: 0644
  with_items:
    - root-ca.pem
    - root-ca.key
    - "{{ inventory_hostname }}.key"
    - "{{ inventory_hostname }}.pem"
    - "{{ inventory_hostname }}_http.key"
    - "{{ inventory_hostname }}_http.pem"
    - "{{ inventory_hostname }}_elasticsearch_config_snippet.yml"
    - admin.key
    - admin.pem
  when: install.changed

#Copy the config template
- name: Copy Configuration File
  template: src=elasticsearch.yml dest={{conf_dir}}/elasticsearch.yml group={{ es_group }} mode=0644 backup=yes
  notify: restart elasticsearch

- name: Security Plugin Install | Make the executable file generate certs
  file:
    dest: "{{ es_sec_plugin_tools_path }}/securityadmin.sh"
    owner: root
    group: root
    mode: "0644"
  run_once: true
  when: install.changed

- name: Security Plugin Install | Prepare the opendistro security configuration file
  command: sed -i 's/searchguard/opendistro_security/g' {{ conf_dir }}/elasticsearch.yml
  when: install.changed

- name: Security Plugin Install | Restart elasticsearch with security configuration
  systemd:
    name: elasticsearch
    state: restarted
  when: install.changed

- name: Security Plugin Install | Copy the opendistro security internal users template
  template:
    src: internal_users.yml
    dest: "{{ es_sec_plugin_conf_path }}/internal_users.yml"
    mode: 0644
  run_once: true
  when: install.changed

- name: Security Plugin Install | Set the Admin user password
  shell: >
    sed -i 's,{{ admin_password }},'$(sh {{ es_sec_plugin_tools_path }}/hash.sh -p {{ admin_password }} | tail -1)','
    {{ es_sec_plugin_conf_path }}/internal_users.yml
  run_once: true
  when: install.changed

- name: Security Plugin Install | Set the kibanaserver user pasword
  shell: >
    sed -i 's,{{ kibanaserver_password }},'$(sh {{ es_sec_plugin_tools_path }}/hash.sh -p {{ kibanaserver_password }} | tail -1)','
    {{ es_sec_plugin_conf_path }}/internal_users.yml
  run_once: true
  when: install.changed

- name: Security Plugin Install | Initialize the opendistro security index in elasticsearch
  shell: >
    sh {{ es_sec_plugin_tools_path }}/securityadmin.sh
    -cacert {{ conf_dir }}/root-ca.pem
    -cert {{ conf_dir }}/admin.pem
    -key {{ conf_dir }}/admin.key
    -cd {{ es_sec_plugin_conf_path }}/
    -nhnv -icl
    -h {{ hostvars[inventory_hostname]['ip'] }}
  run_once: true
  when: install.changed
