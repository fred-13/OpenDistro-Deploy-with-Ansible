cluster.name: "{{ elasticsearch_cluster_name }}"

node.name: "{{ inventory_hostname }}"

path.data: /var/lib/elasticsearch

path.logs: /var/log/elasticsearch

network.host: "localhost"

http.port: 9200

discovery.seed_hosts: ["localhost"]

cluster.initial_master_nodes: ["localhost"]

discovery.zen.minimum_master_nodes: "{{ minimum_master_nodes }}"

{% if opendistro_security_install %}
cluster.routing.allocation.disk.threshold_enabled: false
node.max_local_storage_nodes: {{ minimum_master_nodes }}
opendistro_security.allow_default_init_securityindex: true
opendistro_security.audit.type: internal_elasticsearch
opendistro_security.enable_snapshot_restore_privilege: true
opendistro_security.check_snapshot_restore_write_privileges: true
opendistro_security.restapi.roles_enabled: ["all_access", "security_rest_api_access"]
opendistro_security.ssl.transport.pemcert_filepath: {{ inventory_hostname }}.pem
opendistro_security.ssl.transport.pemkey_filepath: {{ inventory_hostname }}.key
opendistro_security.ssl.transport.pemtrustedcas_filepath: root-ca.pem
opendistro_security.ssl.transport.enforce_hostname_verification: false
opendistro_security.ssl.transport.resolve_hostname: false
opendistro_security.ssl.http.enabled: true
opendistro_security.ssl.http.pemcert_filepath: {{ inventory_hostname }}_http.pem
opendistro_security.ssl.http.pemkey_filepath: {{ inventory_hostname }}_http.key
opendistro_security.ssl.http.pemtrustedcas_filepath: root-ca.pem
opendistro_security.nodes_dn:
- CN=es1.example.com,OU=Ops,O=example.com\, Inc.,DC=example.com
- CN=es2.example.com,OU=Ops,O=example.com\, Inc.,DC=example.com
- CN=es3.example.com,OU=Ops,O=example.com\, Inc.,DC=example.com
opendistro_security.authcz.admin_dn:
- CN=admin.example.com,OU=Ops,O=example.com\, Inc.,DC=example.com
{% endif %}
